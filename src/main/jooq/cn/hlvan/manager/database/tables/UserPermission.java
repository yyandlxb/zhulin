/*
 * This file is generated by jOOQ.
*/
package cn.hlvan.manager.database.tables;


import cn.hlvan.manager.database.Indexes;
import cn.hlvan.manager.database.Keys;
import cn.hlvan.manager.database.Zhulin;
import cn.hlvan.manager.database.tables.records.UserPermissionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPermission extends TableImpl<UserPermissionRecord> {

    private static final long serialVersionUID = 308201027;

    /**
     * The reference instance of <code>zhulin.user_permission</code>
     */
    public static final UserPermission USER_PERMISSION = new UserPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserPermissionRecord> getRecordType() {
        return UserPermissionRecord.class;
    }

    /**
     * The column <code>zhulin.user_permission.id</code>. 用户权限id
     */
    public final TableField<UserPermissionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "用户权限id");

    /**
     * The column <code>zhulin.user_permission.user_id</code>. 用户id
     */
    public final TableField<UserPermissionRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户id");

    /**
     * The column <code>zhulin.user_permission.permission_id</code>. 权限id
     */
    public final TableField<UserPermissionRecord, Integer> PERMISSION_ID = createField("permission_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "权限id");

    /**
     * The column <code>zhulin.user_permission.created_at</code>.
     */
    public final TableField<UserPermissionRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>zhulin.user_permission</code> table reference
     */
    public UserPermission() {
        this(DSL.name("user_permission"), null);
    }

    /**
     * Create an aliased <code>zhulin.user_permission</code> table reference
     */
    public UserPermission(String alias) {
        this(DSL.name(alias), USER_PERMISSION);
    }

    /**
     * Create an aliased <code>zhulin.user_permission</code> table reference
     */
    public UserPermission(Name alias) {
        this(alias, USER_PERMISSION);
    }

    private UserPermission(Name alias, Table<UserPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserPermission(Name alias, Table<UserPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhulin.ZHULIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserPermissionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserPermissionRecord> getPrimaryKey() {
        return Keys.KEY_USER_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<UserPermissionRecord>>asList(Keys.KEY_USER_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermission as(String alias) {
        return new UserPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPermission as(Name alias) {
        return new UserPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserPermission rename(String name) {
        return new UserPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserPermission rename(Name name) {
        return new UserPermission(name, null);
    }
}
