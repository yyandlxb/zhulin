/*
 * This file is generated by jOOQ.
*/
package cn.hlvan.manager.database.tables.records;


import cn.hlvan.manager.database.tables.Order;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderRecord extends UpdatableRecordImpl<OrderRecord> implements Record22<Integer, String, Byte, Byte, Integer, Integer, BigDecimal, BigDecimal, String, String, Timestamp, Timestamp, String, Double, Integer, Byte, Timestamp, String, Integer, String, String, Integer> {

    private static final long serialVersionUID = -1924033240;

    /**
     * Setter for <code>zhulin.order.id</code>.
     */
    public OrderRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>zhulin.order.order_code</code>. 订单号
     */
    public OrderRecord setOrderCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.order_code</code>. 订单号
     */
    public String getOrderCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zhulin.order.order_status</code>. 0：待审核 1：发布中 2：已接单 3：待点评 4：商家已完成（已打款）5：取消 6：关闭 7：管理员已完成（已打款）,8-审核未通过
     */
    public OrderRecord setOrderStatus(Byte value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.order_status</code>. 0：待审核 1：发布中 2：已接单 3：待点评 4：商家已完成（已打款）5：取消 6：关闭 7：管理员已完成（已打款）,8-审核未通过
     */
    public Byte getOrderStatus() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>zhulin.order.pay_type</code>. 1、微信 2、支付宝 3、银联 4、余额 5、现金 6、chinaPay
     */
    public OrderRecord setPayType(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.pay_type</code>. 1、微信 2、支付宝 3、银联 4、余额 5、现金 6、chinaPay
     */
    public Byte getPayType() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>zhulin.order.user_id</code>. 用户id
     */
    public OrderRecord setUserId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.user_id</code>. 用户id
     */
    public Integer getUserId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>zhulin.order.total</code>. 数量
     */
    public OrderRecord setTotal(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.total</code>. 数量
     */
    public Integer getTotal() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>zhulin.order.merchant_price</code>. 商家价格
     */
    public OrderRecord setMerchantPrice(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.merchant_price</code>. 商家价格
     */
    public BigDecimal getMerchantPrice() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>zhulin.order.admin_price</code>. 管理员价格
     */
    public OrderRecord setAdminPrice(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.admin_price</code>. 管理员价格
     */
    public BigDecimal getAdminPrice() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>zhulin.order.eassy_type</code>. 文章领域
     */
    public OrderRecord setEassyType(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.eassy_type</code>. 文章领域
     */
    public String getEassyType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>zhulin.order.notes</code>. 备注
     */
    public OrderRecord setNotes(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.notes</code>. 备注
     */
    public String getNotes() {
        return (String) get(9);
    }

    /**
     * Setter for <code>zhulin.order.created_at</code>.
     */
    public OrderRecord setCreatedAt(Timestamp value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(10);
    }

    /**
     * Setter for <code>zhulin.order.updated_at</code>.
     */
    public OrderRecord setUpdatedAt(Timestamp value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(11);
    }

    /**
     * Setter for <code>zhulin.order.order_title</code>. 文章标题
     */
    public OrderRecord setOrderTitle(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.order_title</code>. 文章标题
     */
    public String getOrderTitle() {
        return (String) get(12);
    }

    /**
     * Setter for <code>zhulin.order.original_level</code>. 原创度
     */
    public OrderRecord setOriginalLevel(Double value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.original_level</code>. 原创度
     */
    public Double getOriginalLevel() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>zhulin.order.picture</code>. 图片数量要求
     */
    public OrderRecord setPicture(Integer value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.picture</code>. 图片数量要求
     */
    public Integer getPicture() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>zhulin.order.type</code>. 0-流量文，1-养号文
     */
    public OrderRecord setType(Byte value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.type</code>. 0-流量文，1-养号文
     */
    public Byte getType() {
        return (Byte) get(15);
    }

    /**
     * Setter for <code>zhulin.order.end_time</code>. 截止日期
     */
    public OrderRecord setEndTime(Timestamp value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.end_time</code>. 截止日期
     */
    public Timestamp getEndTime() {
        return (Timestamp) get(16);
    }

    /**
     * Setter for <code>zhulin.order.require</code>. 要求
     */
    public OrderRecord setRequire(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.require</code>. 要求
     */
    public String getRequire() {
        return (String) get(17);
    }

    /**
     * Setter for <code>zhulin.order.eassy_total</code>. 文章数量
     */
    public OrderRecord setEassyTotal(Integer value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.eassy_total</code>. 文章数量
     */
    public Integer getEassyTotal() {
        return (Integer) get(18);
    }

    /**
     * Setter for <code>zhulin.order.word_count</code>. 文章字数
     */
    public OrderRecord setWordCount(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.word_count</code>. 文章字数
     */
    public String getWordCount() {
        return (String) get(19);
    }

    /**
     * Setter for <code>zhulin.order.result</code>. 审核结果
     */
    public OrderRecord setResult(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.result</code>. 审核结果
     */
    public String getResult() {
        return (String) get(20);
    }

    /**
     * Setter for <code>zhulin.order.bespoke_total</code>. 已预约数量
     */
    public OrderRecord setBespokeTotal(Integer value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>zhulin.order.bespoke_total</code>. 已预约数量
     */
    public Integer getBespokeTotal() {
        return (Integer) get(21);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Integer, String, Byte, Byte, Integer, Integer, BigDecimal, BigDecimal, String, String, Timestamp, Timestamp, String, Double, Integer, Byte, Timestamp, String, Integer, String, String, Integer> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row22<Integer, String, Byte, Byte, Integer, Integer, BigDecimal, BigDecimal, String, String, Timestamp, Timestamp, String, Double, Integer, Byte, Timestamp, String, Integer, String, String, Integer> valuesRow() {
        return (Row22) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Order.ORDER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Order.ORDER.ORDER_CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return Order.ORDER.ORDER_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return Order.ORDER.PAY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Order.ORDER.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Order.ORDER.TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return Order.ORDER.MERCHANT_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field8() {
        return Order.ORDER.ADMIN_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Order.ORDER.EASSY_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Order.ORDER.NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field11() {
        return Order.ORDER.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field12() {
        return Order.ORDER.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Order.ORDER.ORDER_TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field14() {
        return Order.ORDER.ORIGINAL_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return Order.ORDER.PICTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field16() {
        return Order.ORDER.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field17() {
        return Order.ORDER.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field18() {
        return Order.ORDER.REQUIRE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field19() {
        return Order.ORDER.EASSY_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field20() {
        return Order.ORDER.WORD_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field21() {
        return Order.ORDER.RESULT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field22() {
        return Order.ORDER.BESPOKE_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getOrderCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getOrderStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getPayType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getMerchantPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component8() {
        return getAdminPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getEassyType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component11() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component12() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getOrderTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component14() {
        return getOriginalLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getPicture();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component16() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component17() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component18() {
        return getRequire();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component19() {
        return getEassyTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component20() {
        return getWordCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component21() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component22() {
        return getBespokeTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getOrderCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getOrderStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getPayType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getMerchantPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value8() {
        return getAdminPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getEassyType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value11() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value12() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getOrderTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value14() {
        return getOriginalLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getPicture();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value16() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value17() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value18() {
        return getRequire();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value19() {
        return getEassyTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value20() {
        return getWordCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value21() {
        return getResult();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value22() {
        return getBespokeTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value2(String value) {
        setOrderCode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value3(Byte value) {
        setOrderStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value4(Byte value) {
        setPayType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value5(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value6(Integer value) {
        setTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value7(BigDecimal value) {
        setMerchantPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value8(BigDecimal value) {
        setAdminPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value9(String value) {
        setEassyType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value10(String value) {
        setNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value11(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value12(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value13(String value) {
        setOrderTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value14(Double value) {
        setOriginalLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value15(Integer value) {
        setPicture(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value16(Byte value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value17(Timestamp value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value18(String value) {
        setRequire(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value19(Integer value) {
        setEassyTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value20(String value) {
        setWordCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value21(String value) {
        setResult(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord value22(Integer value) {
        setBespokeTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderRecord values(Integer value1, String value2, Byte value3, Byte value4, Integer value5, Integer value6, BigDecimal value7, BigDecimal value8, String value9, String value10, Timestamp value11, Timestamp value12, String value13, Double value14, Integer value15, Byte value16, Timestamp value17, String value18, Integer value19, String value20, String value21, Integer value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderRecord
     */
    public OrderRecord() {
        super(Order.ORDER);
    }

    /**
     * Create a detached, initialised OrderRecord
     */
    public OrderRecord(Integer id, String orderCode, Byte orderStatus, Byte payType, Integer userId, Integer total, BigDecimal merchantPrice, BigDecimal adminPrice, String eassyType, String notes, Timestamp createdAt, Timestamp updatedAt, String orderTitle, Double originalLevel, Integer picture, Byte type, Timestamp endTime, String require, Integer eassyTotal, String wordCount, String result, Integer bespokeTotal) {
        super(Order.ORDER);

        set(0, id);
        set(1, orderCode);
        set(2, orderStatus);
        set(3, payType);
        set(4, userId);
        set(5, total);
        set(6, merchantPrice);
        set(7, adminPrice);
        set(8, eassyType);
        set(9, notes);
        set(10, createdAt);
        set(11, updatedAt);
        set(12, orderTitle);
        set(13, originalLevel);
        set(14, picture);
        set(15, type);
        set(16, endTime);
        set(17, require);
        set(18, eassyTotal);
        set(19, wordCount);
        set(20, result);
        set(21, bespokeTotal);
    }
}
