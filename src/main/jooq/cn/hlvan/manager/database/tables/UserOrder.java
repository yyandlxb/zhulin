/*
 * This file is generated by jOOQ.
*/
package cn.hlvan.manager.database.tables;


import cn.hlvan.manager.database.Indexes;
import cn.hlvan.manager.database.Keys;
import cn.hlvan.manager.database.Zhulin;
import cn.hlvan.manager.database.tables.records.UserOrderRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserOrder extends TableImpl<UserOrderRecord> {

    private static final long serialVersionUID = 1896984935;

    /**
     * The reference instance of <code>zhulin.user_order</code>
     */
    public static final UserOrder USER_ORDER = new UserOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserOrderRecord> getRecordType() {
        return UserOrderRecord.class;
    }

    /**
     * The column <code>zhulin.user_order.id</code>.
     */
    public final TableField<UserOrderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>zhulin.user_order.order_id</code>. 订单号id
     */
    public final TableField<UserOrderRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "订单号id");

    /**
     * The column <code>zhulin.user_order.order_code</code>. 订单号
     */
    public final TableField<UserOrderRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.VARCHAR(255), this, "订单号");

    /**
     * The column <code>zhulin.user_order.order_status</code>. 1：待完成 2：已完成
     */
    public final TableField<UserOrderRecord, String> ORDER_STATUS = createField("order_status", org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.VARCHAR)), this, "1：待完成 2：已完成");

    /**
     * The column <code>zhulin.user_order.user_id</code>. 用户id
     */
    public final TableField<UserOrderRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "用户id");

    /**
     * The column <code>zhulin.user_order.user_total</code>. 已上传数量
     */
    public final TableField<UserOrderRecord, Integer> USER_TOTAL = createField("user_total", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "已上传数量");

    /**
     * The column <code>zhulin.user_order.notes</code>. 备注
     */
    public final TableField<UserOrderRecord, String> NOTES = createField("notes", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "备注");

    /**
     * The column <code>zhulin.user_order.created_at</code>.
     */
    public final TableField<UserOrderRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>zhulin.user_order.updated_at</code>.
     */
    public final TableField<UserOrderRecord, Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>zhulin.user_order</code> table reference
     */
    public UserOrder() {
        this(DSL.name("user_order"), null);
    }

    /**
     * Create an aliased <code>zhulin.user_order</code> table reference
     */
    public UserOrder(String alias) {
        this(DSL.name(alias), USER_ORDER);
    }

    /**
     * Create an aliased <code>zhulin.user_order</code> table reference
     */
    public UserOrder(Name alias) {
        this(alias, USER_ORDER);
    }

    private UserOrder(Name alias, Table<UserOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserOrder(Name alias, Table<UserOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Zhulin.ZHULIN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserOrderRecord> getPrimaryKey() {
        return Keys.KEY_USER_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<UserOrderRecord>>asList(Keys.KEY_USER_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserOrder as(String alias) {
        return new UserOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserOrder as(Name alias) {
        return new UserOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserOrder rename(String name) {
        return new UserOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserOrder rename(Name name) {
        return new UserOrder(name, null);
    }
}
